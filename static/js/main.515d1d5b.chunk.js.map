{"version":3,"sources":["hooks/usePage.js","hooks/useName.js","hooks/Mode_List.js","containers/Home.js","components/IncenseArticleModal.js","components/IncenseModal.js","components/NameBox.js","api.js","containers/Incense.js","components/StrawModal.js","containers/Straw.js","containers/Divination.js","containers/Light.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["LOCALSTORAGE_KEY","usePage","savePage","localStorage","getItem","useState","mode","setMode","changePage","newPage","console","log","setItem","useName","saveMe","name","setName","hasLight","setHasLight","signIn","newName","signOut","turnLight","Mode_List","modeName","title","discription","Home","className","map","i","onClick","IncenseArticleModal","isArticleModalVisible","setArticleModalVisible","createArticle","Form","useForm","form","TextArea","Input","visible","okText","cancelText","onCancel","onOk","validateFields","then","values","resetFields","catch","e","window","alert","layout","Item","label","rules","required","message","rows","IncenseModal","isIncenseModalVisible","setIncenseModalVisible","createIncense","NameBox","size","gap","style","backgroundColor","icon","UserOutlined","dotenv","config","instance","axios","create","baseURL","sendMessage","type","url","a","post","res","response","get","Option","Select","Search","Incense","articleListId","setArticleListId","page","setPage","articleList","setArticleList","queryType","setQueryType","query","setQuery","pickedArticleId","setPickedArticleId","content","incense","pickedArticle","setPickedArticle","onSearch","value","getIncenseArticleId","params","ids","slice","getIncenseArticleBrief","incenseArticle_id","time","Date","now","getIncenseArticleDetail","data","incenseArticle_ids","reverse","length","incense_brief","id","incenseArticle","useEffect","undefined","Group","compact","width","defaultValue","onChange","allowClear","enterButton","key","article","current","total","Math","ceil","shape","author","avatar","datetime","toString","replace","margin","StrawModal","isModalVisible","setModalVisible","createStraw","Straw","step","setStep","poem","straw","setStraw","description","getStraw","error","toss","result","floor","random","Divination","realName","setRealName","birthday","setBirthday","divination","setDivination","startDivinate","placeholder","target","date","dateString","Light","light_list","setLight_list","getLightList","createLight","light","Header","setIsModalVisible","height","defaultSelectedKeys","theme","HomeOutlined","handleOk","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.515d1d5b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst LOCALSTORAGE_KEY = \"save-page\";\r\n\r\nconst usePage = () => {\r\n    const savePage = localStorage.getItem(LOCALSTORAGE_KEY);\r\n    const [mode, setMode] = useState(savePage || \"Home\");\r\n    const changePage = (newPage) => {\r\n        console.log(\"Change mode :\", newPage);\r\n        localStorage.setItem(LOCALSTORAGE_KEY, newPage);\r\n        setMode(newPage);\r\n    }\r\n\r\n    return { mode, changePage };\r\n};\r\n\r\nexport default usePage;","import { useState } from \"react\";\r\n\r\nconst LOCALSTORAGE_KEY = \"save-me\";\r\n\r\nconst useName = () => {\r\n    const saveMe = localStorage.getItem(LOCALSTORAGE_KEY);\r\n    const [ name, setName ] = useState(saveMe || \"匿名\");\r\n    const [ hasLight, setHasLight ] = useState(false);\r\n\r\n    const signIn = (newName) => {\r\n        setName(newName);\r\n        localStorage.setItem(LOCALSTORAGE_KEY, newName);\r\n        setHasLight(false);\r\n    }\r\n\r\n    const signOut = () => {\r\n        setName(\"匿名\");\r\n        localStorage.setItem(LOCALSTORAGE_KEY, \"匿名\");\r\n    }\r\n\r\n    const turnLight = () => {\r\n        setHasLight(true);\r\n    }\r\n\r\n    return { name, signIn, signOut, hasLight, turnLight };\r\n};\r\n\r\nexport default useName;","const Mode_List = [\r\n    { modeName:\"Incense\", title:\"上香\", discription:\"上香是廣結善緣、積德行善、修道成真的重要途徑 ，故：「九天之上，唯道獨尊，萬法之中，焚香為先」。\" },\r\n    { modeName:\"Straw\", title:\"求籤\", discription:\"以籤來占卜吉凶的行為。信徒抽取籤條且核對籤條上的番號（或干支、六十四卦）後，再以相應的籤詩獲得詩文解答。\" },\r\n    { modeName:\"Divination\", title:\"算命\", discription:\"命理學延傳至今已有千年的歷史，研究命理了解自己命運的吉凶，以求知命、安命，進而知運、掌運、趨吉避凶。\" },\r\n    { modeName:\"Light\", title:\"光明燈\", discription:\"佛家所語「光明」，亦即「心光」，又稱智慧光，譬喻佛法智慧像光一樣明亮，能照破眾生幽暗的煩惱。\" }\r\n]\r\n\r\nexport default Mode_List;","import Mode_List from '../hooks/Mode_List';\r\n\r\nconst Home = ({changePage}) => (\r\n    <div>\r\n        <div className=\"wallpaper vertical\">\r\n            <h1>線上宮廟系統</h1>\r\n            <h3>拉近神明與人的距離</h3>\r\n        </div>\r\n        <div className=\"function-panel\">\r\n            \r\n            {Mode_List.map((mode, i) => (\r\n                <div className=\"function-box vertical\" key={i}>\r\n                    <button key={`${i}-button`} onClick={() => {changePage(mode.modeName)}}>\r\n                    <h1>{mode.title}</h1>\r\n                </button>\r\n                {mode.discription}\r\n                </div>\r\n                \r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import { Modal, Form, Input } from 'antd';\r\n\r\nconst IncenseArticleModal = ({ isArticleModalVisible, setArticleModalVisible, createArticle }) => {\r\n    const [form] = Form.useForm();\r\n    const { TextArea } = Input;\r\n    return(\r\n        <Modal\r\n            visible={isArticleModalVisible}\r\n            title=\"輸入上香文內容\"\r\n            okText=\"確認\" cancelText=\"取消\"\r\n            onCancel={()=>setArticleModalVisible(false)}\r\n            onOk={() => {\r\n                form.validateFields().then((values) => {\r\n                form.resetFields();\r\n                createArticle(values);\r\n                }).catch((e) => { window.alert(e); });\r\n            }}>\r\n            <Form form={form} layout=\"vertical\" \r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"title\" label=\"上香主題\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"主題不能為空\",\r\n                    },]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"content\" label=\"內容\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"內容不能為空\",\r\n                    },]}\r\n                >\r\n                    <TextArea rows={10} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default IncenseArticleModal;","import { Modal, Form, Input } from 'antd';\r\n\r\nconst IncenseModal = ({ isIncenseModalVisible, setIncenseModalVisible, createIncense }) => {\r\n    const [form] = Form.useForm();\r\n    return(\r\n        <Modal\r\n            visible={isIncenseModalVisible}\r\n            title=\"上香\"\r\n            okText=\"確認\" cancelText=\"取消\"\r\n            onCancel={()=>setIncenseModalVisible(false)}\r\n            onOk={() => {\r\n                form.validateFields().then((values) => {\r\n                form.resetFields();\r\n                createIncense(values);\r\n                }).catch((e) => { window.alert(e); });\r\n            }}>\r\n            <Form form={form} layout=\"vertical\" \r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"content\" label=\"留言\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"留言內容不能為空！\",\r\n                    },]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default IncenseModal;","import { Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst NameBox = ({ name }) => (\r\n    <div className=\"nameBox\">\r\n        {name === \"匿名\" ? \r\n        <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }} icon={<UserOutlined />} />\r\n        : \r\n        <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }}>\r\n            {name[0]}\r\n        </Avatar>}\r\n        {name}\r\n    </div>\r\n)\r\n\r\nexport default NameBox;","import axios from 'axios'\r\n\r\nimport dotenv from 'dotenv-defaults';\r\ndotenv.config();\r\n\r\nconst instance = axios.create({ baseURL: \"https://34.81.171.221:5000\" })\r\n\r\nconst sendMessage = async (type, url, message) => {\r\n    console.log(\"SEND MESSAGE:\", message)\r\n    let res\r\n    switch(type){\r\n        case \"post\":\r\n            try{\r\n                res = await instance.post(url, message)\r\n                console.log(res)\r\n                return res\r\n            }catch(e){\r\n                console.log(e.response)\r\n            }\r\n            break\r\n        case \"get\":\r\n            try{\r\n                res = await instance.get(url, message)\r\n                console.log(res)\r\n                return res\r\n            }\r\n            catch(e){\r\n                console.log(e.response)\r\n            }\r\n            break\r\n        default:\r\n            return []\r\n    }\r\n}\r\n\r\nexport { sendMessage }  ","import { useState, useEffect } from 'react';\r\nimport { Input, Select, Divider, Tooltip, Comment, Pagination, Avatar, Button, Menu } from 'antd';\r\nimport IncenseArticleModal from '../components/IncenseArticleModal';\r\nimport IncenseModal from '../components/IncenseModal';\r\nimport NameBox from '../components/NameBox';\r\nimport { sendMessage } from '../api';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst MAX_ARTICLE_A_PAGE = 16;\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nconst Incense = ({ name }) => {\r\n    //use api to get data\r\n    const [articleListId, setArticleListId] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [articleList, setArticleList] = useState([]);\r\n\r\n    const [queryType, setQueryType] = useState(\"IncenseArticle\");\r\n    const [query, setQuery] = useState(\"\");\r\n\r\n    const [pickedArticleId, setPickedArticleId] = useState();\r\n    const [pickedArticle, setPickedArticle] = useState(\r\n        {name: \"\", title: \"\", content: \"\", incense: []}\r\n    );\r\n    \r\n    const [isArticleModalVisible, setArticleModalVisible] = useState(false);\r\n    const [isIncenseModalVisible, setIncenseModalVisible] = useState(false);\r\n\r\n    const onSearch = async(value) => {\r\n        console.log(\"Search :\", queryType, value);\r\n        setQuery(value);\r\n        await getIncenseArticleId(value);\r\n    }\r\n\r\n    const createArticle = async({ title, content }) => {\r\n        setArticleModalVisible(false);\r\n        console.log(\"new incense article ! :\", name, title, content);\r\n        await sendMessage('post', 'incenseArticle', {params:{name, title, content}});\r\n        await getIncenseArticleId(\"\");\r\n        let ids = articleListId.slice((page - 1)*MAX_ARTICLE_A_PAGE, page*MAX_ARTICLE_A_PAGE);\r\n        await getIncenseArticleBrief(ids);\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        //console.log('click ', e.key);\r\n        setPickedArticleId(e.key);\r\n    };\r\n\r\n    const createIncense = async({ content }) => {\r\n        setIncenseModalVisible(false);\r\n        console.log(\"new incense ! :\", name, content);\r\n        await sendMessage('post', 'incense', {params:{incenseArticle_id: pickedArticleId, name, content, time: Date.now()}});\r\n        await getIncenseArticleDetail(pickedArticleId);\r\n    };\r\n\r\n    const getIncenseArticleId = async(query) => {\r\n        let type = queryType;\r\n        if (query === \"\")\r\n            type = \"\"\r\n        console.log(\"get articleList id\", query);\r\n        try{\r\n            const { data } = await sendMessage('get', 'incenseArticle/id', {params:{queryType: type, query}});\r\n            setArticleListId(data.incenseArticle_ids.reverse());\r\n        }catch{\r\n            console.log(\"the database is empty\");\r\n            setArticleListId([]);\r\n        }\r\n    }\r\n\r\n    const getIncenseArticleBrief = async(ids) => {\r\n        if(ids.length === 0)\r\n            setArticleList([]);\r\n        else{\r\n            try{\r\n                console.log(\"get article List brief\");\r\n                const { data } = await sendMessage('get', 'incenseArticle/brief', {params:{incenseArticle_ids: ids}});\r\n                setArticleList(data.incense_brief);\r\n            }catch{\r\n                console.log(\"the database is empty\");\r\n                setArticleList([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getIncenseArticleDetail = async(id) => {\r\n        console.log(\"get article detail\");\r\n        const { data } = await sendMessage('get', 'incenseArticle/detail', {params:{incenseArticle_id: id}});\r\n        setPickedArticle(data.incenseArticle);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(articleListId.length === 0 && query === \"\"){\r\n            //use api to get data\r\n            console.log(\"get all article\");\r\n            getIncenseArticleId(\"\");\r\n        }\r\n    }, [articleListId]);\r\n\r\n    useEffect(() => {\r\n        //use api to get data\r\n        if(articleListId.length !== 0){\r\n            console.log(\"get articleList\");\r\n            let ids = articleListId.slice((page - 1)*MAX_ARTICLE_A_PAGE, page*MAX_ARTICLE_A_PAGE);\r\n            getIncenseArticleBrief(ids);\r\n        }\r\n        else\r\n        {\r\n            getIncenseArticleBrief([]);\r\n        }\r\n    }, [page, articleListId]);\r\n\r\n    useEffect(() => {\r\n        //use api to get data\r\n        if(pickedArticleId !== undefined){\r\n            console.log(\"get pickedArticle detail\", pickedArticleId);\r\n            getIncenseArticleDetail(pickedArticleId);\r\n        }\r\n    }, [pickedArticleId]);\r\n\r\n    return(\r\n        <div className=\"content\">\r\n            {/* <div className=\"Header-space-box\"/> */}\r\n            <div className=\"Incense-container\">\r\n                <div className=\"IncenseArticle-list vertical\">\r\n                    <Input.Group compact>\r\n                        <Select style={{ width: \"40%\" }} defaultValue=\"IncenseArticle\" onChange={(value) => setQueryType(value)}>\r\n                            <Option value=\"IncenseArticle\">上香文標題</Option>\r\n                            <Option value=\"Initiator\">發起者姓名</Option>\r\n                        </Select>\r\n                        <Search allowClear enterButton style={{ width: \"60%\" }} defaultValue=\"\" onSearch={onSearch}/>\r\n                    </Input.Group>\r\n                    <Menu \r\n                        mode=\"vertical\"\r\n                        onClick={handleClick}\r\n                        style={{ width: \"20vw\" }}\r\n                    >\r\n                        {articleList.map((article, i)=>(\r\n                            <Menu.Item key={article.incenseArticle_ids}>\r\n                                <div className=\"IncenseArticleBox\">\r\n                                    {article.name === \"匿名\" ? \r\n                                        <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }} icon={<UserOutlined />} />\r\n                                        : \r\n                                        <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }}>\r\n                                            {article.name[0]}\r\n                                        </Avatar>}\r\n                                    {article.title}\r\n                                </div>\r\n                            </Menu.Item>\r\n                        ))}\r\n                    </Menu>\r\n                    <div className=\"push-down\"/>\r\n                    <div className=\"IncenseArticle-list-panel vertical\">\r\n                        <Pagination current={page} onChange={(page) => setPage(page)} total={Math.ceil(articleListId.length / MAX_ARTICLE_A_PAGE)*10} />\r\n                        <Button type=\"primary\" onClick={()=>setArticleModalVisible(true)}>發上香文</Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"IncenseArticle\">\r\n                    <div className=\"IncenseArticle-info-box vertical\">\r\n                        <div className=\"IncenseArticle-info-panel horizontal\">\r\n                            {pickedArticleId===undefined ? <></> :\r\n                            <>\r\n                                <div className=\"IncenseArticle-info vertical\">\r\n                                    <h1>{pickedArticle.title}</h1>\r\n                                    <div className=\"push-right\"/>\r\n                                    <NameBox name={pickedArticle.name}/>\r\n                                </div>\r\n                                <div className=\"push-right\"/>\r\n                                上香數 : {pickedArticle.incense===undefined? 0 : pickedArticle.incense.length}\r\n                                <Button shape=\"round\" onClick={()=>setIncenseModalVisible(true)}>上香 \\|/</Button>\r\n                            </>\r\n                            }\r\n                        </div>\r\n                        <div className=\"IncenseArticle-content\">\r\n                            <pre>{pickedArticle.content}</pre>\r\n                        </div>\r\n                    </div>\r\n                    {pickedArticle.incense.length===0? <></> : \r\n                        <div className=\"Incense-list\">\r\n                        {pickedArticle.incense.map((incense)=> (\r\n                            <>\r\n                            <Comment\r\n                                author={incense.name}\r\n                                avatar={incense.name === \"匿名\" ? \r\n                                <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }} icon={<UserOutlined />} />\r\n                                : \r\n                                <Avatar size={30} gap={5} style={{ backgroundColor: '#6699CC' }}>\r\n                                    {incense.name[0]}\r\n                                </Avatar>}\r\n                                datetime= {\r\n                                    <Tooltip title={Date(incense.time).toString()}>\r\n                                      <span>{Date(incense.time).toString().slice(0,10).replace(/-/g,\"\")}</span>\r\n                                    </Tooltip>\r\n                                }\r\n                                content={<pre>{incense.content}</pre>}\r\n                            />\r\n                            <Divider style={{ margin: 1 }}/>\r\n                            </>\r\n                        ))}\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <IncenseArticleModal isArticleModalVisible={isArticleModalVisible} setArticleModalVisible={setArticleModalVisible} createArticle={createArticle}/>\r\n            <IncenseModal isIncenseModalVisible={isIncenseModalVisible} setIncenseModalVisible={setIncenseModalVisible} createIncense={createIncense}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Incense;","import { Modal, Form, Input } from 'antd';\r\n\r\nconst StrawModal = ({ isModalVisible, setModalVisible, createStraw }) => {\r\n    const [form] = Form.useForm();\r\n    const { TextArea } = Input;\r\n    return(\r\n        <Modal\r\n            visible={isModalVisible}\r\n            title=\"投稿籤詩\"\r\n            okText=\"確認\" cancelText=\"取消\"\r\n            onCancel={()=>setModalVisible(false)}\r\n            onOk={() => {\r\n                form.validateFields().then((values) => {\r\n                form.resetFields();\r\n                createStraw(values);\r\n                }).catch((e) => { window.alert(e); });\r\n            }}>\r\n            <Form form={form} layout=\"vertical\" \r\n                name=\"form_in_modal\">\r\n                <Form.Item\r\n                    name=\"title\" label=\"標題\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"標題不能為空！\",\r\n                    },]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"content\" label=\"籤詩\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"籤詩內容不能為空！\",\r\n                    },]}\r\n                >\r\n                    <TextArea rows={4}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"description\" label=\"解曰\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"解曰內容不能為空！\",\r\n                    },]}\r\n                >\r\n                    <TextArea rows={10} />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default StrawModal;","import { useState } from 'react';\r\nimport { message, Button } from 'antd';\r\nimport { sendMessage } from '../api';\r\nimport StrawModal from '../components/StrawModal'; \r\n\r\nconst Straw = ({ name }) => {\r\n    const [step, setStep] = useState(0);\r\n    const [straw, setStraw] = useState({\r\n        title: \"\",\r\n        poem: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n    const createStraw = async({ title, content, description }) => {\r\n        setModalVisible(false);\r\n        console.log(\"create straw : \", title, content, description);\r\n        await sendMessage('post', 'straw', {params:{name, title, content, description}});\r\n    }\r\n\r\n    const getStraw = async() => {\r\n        try{\r\n            const { data } = await sendMessage('get', 'straw');\r\n            setStraw(data);\r\n            setStep(2);\r\n        }catch{\r\n            message.error(\"請確認是否有正確連網\");\r\n            setStep(0);\r\n        }\r\n        \r\n    }\r\n\r\n    const toss = () => {\r\n        let result = Math.floor(Math.random() * 4);\r\n        if(result === 0 || result === 1) // 聖筊\r\n            setStep(3);\r\n        else if(result === 2) // 笑筊\r\n            setStep(4);\r\n        else if(result === 3) // 陰筊\r\n            setStep(5);\r\n    }\r\n\r\n    return(\r\n        <div className=\"vertical content Straw\">\r\n            {(() => {\r\n                switch (step) {\r\n                case 0: //開始求籤\r\n                    return (\r\n                        <>\r\n                            <h1>抽籤步驟 : </h1>\r\n                            <p>1.虔誠向神明稟報您的姓名、年歲、住址、求問事項。</p>\r\n                            <p>2.開始求籤。</p>\r\n                            <p>3.擲筊請示神明是否為此籤。</p>\r\n                            <p>4.若為聖筊則可觀看詩籤內容。</p>\r\n                            <p>5.若為笑筊或陰筊則需重新求籤。</p>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={() => setStep(1)}>開始求籤</Button>\r\n                            <Button shape=\"round\" onClick={() => {\r\n                                if(name === \"匿名\")\r\n                                    message.error(\"請先登錄\");\r\n                                else\r\n                                    setModalVisible(true);\r\n                            }}>我要投稿籤詩</Button>\r\n                        </>\r\n                    );\r\n                case 1: //抽籤\r\n                    return (\r\n                        <>\r\n                            <p>虔誠向神明稟報您的姓名、年歲、住址、求問事項。</p>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={getStraw}>求籤</Button>\r\n                        </>\r\n                    );\r\n                case 2: //擲筊\r\n                    return (\r\n                        <>\r\n                            <h1>{straw.title}</h1>\r\n                            <p>擲筊請示神明是否為此籤。</p>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={toss}>擲筊</Button>\r\n                        </>\r\n                    );\r\n                case 3: //聖筊 解籤\r\n                    return (\r\n                        <>\r\n                            <h1>聖筊 ! </h1>\r\n                            <p>表示神明允許、同意，或行事會順利。</p>\r\n                            <h2>籤詩</h2>\r\n                            <pre>{straw.content}</pre>\r\n                            <h2>解曰</h2>\r\n                            <pre>{straw.description}</pre>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={() => setStep(0)}>返回</Button>\r\n                        </>\r\n                    );\r\n                case 4: //笑筊 重新抽籤\r\n                    return (\r\n                        <>\r\n                            <h1>笑筊</h1>\r\n                            <p>表示神明一笑、不解，或者考慮中，行事狀況不明，可以重新再擲筊請示神明，或再次說清楚自己的祈求。</p>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={() => setStep(1)}>重新求籤</Button>\r\n                        </>\r\n                    );\r\n                case 5: //陰筊 重新抽籤\r\n                    return (\r\n                        <>\r\n                            <h1>陰筊</h1>\r\n                            <p>表示神明否定、憤怒，或者不宜行事，可以重新再擲筊請示。</p>\r\n                            <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={() => setStep(1)}>重新求籤</Button>\r\n                        </>\r\n                    );\r\n                }\r\n            })()}\r\n            \r\n            <StrawModal isModalVisible={isModalVisible} setModalVisible={setModalVisible} createStraw={createStraw}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Straw;","import { useState } from 'react';\r\nimport { message, DatePicker, Input, Button } from 'antd';\r\nimport { sendMessage } from '../api';\r\n\r\nconst Divination = ({ name }) => {\r\n    const [realName, setRealName] = useState(name);\r\n    const [birthday, setBirthday] = useState(\"\");\r\n    const [divination, setDivination] = useState({content: \"\"});\r\n\r\n    const onInputName = (e) => {\r\n        setRealName(e.target.value);\r\n    }\r\n\r\n    const onPickDate = (date, dateString) => {\r\n        setBirthday(dateString);\r\n    }\r\n\r\n    const startDivinate = async() => {\r\n        if(realName === \"匿名\" || birthday === \"\")\r\n            message.error('請輸入真實姓名');\r\n        else\r\n        {\r\n            try{\r\n                console.log(\"startDivinate :\", realName, birthday);\r\n                const { data } = await sendMessage('get', 'divination', {params:{name, birthday}})\r\n                setDivination(data);\r\n            }catch{\r\n                message.error(\"請確認是否有正確連網\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const endDivinate = () => {\r\n        setDivination({content: \"\"});\r\n        setBirthday(\"\");\r\n        setRealName(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"vertical content Divination\">\r\n            {divination.content !== \"\" ? \r\n                <div className=\"Divination-result vertical\">\r\n                    <div className=\"vertical\">\r\n                        <h1>算命結果</h1>\r\n                        <pre>{divination.content}</pre>\r\n                    </div>\r\n                    <Button type=\"primary\" shape=\"round\" onClick={endDivinate}>返回</Button>\r\n                </div>\r\n            :\r\n                <div className=\"Divination-panel vertical\">\r\n                    <div className=\"vertical\">\r\n                        <h1>姓名</h1>\r\n                        <Input placeholder=\"輸入真實姓名\" value={realName} onChange={onInputName}/>\r\n                    </div>\r\n                    <div className=\"vertical\">\r\n                        <h1>出生日期</h1>\r\n                        <DatePicker onChange={onPickDate} />\r\n                    </div>\r\n                    <Button type=\"primary\" shape=\"round\" onClick={startDivinate}>開始算命</Button>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Divination;","import { useState, useEffect } from 'react';\r\nimport { message, Button } from 'antd';\r\nimport { sendMessage } from '../api';\r\n\r\nconst Light = ({ name, hasLight, turnLight }) => {\r\n    const [light_list, setLight_list] = useState([]);\r\n\r\n    const getLightList = async() => {\r\n        console.log(\"get light List id\");\r\n        try{\r\n            const { data } = await sendMessage('get', 'light');\r\n            setLight_list(data);\r\n        }catch{\r\n            console.log(\"the database is empty\");\r\n        }\r\n        \r\n    }\r\n\r\n    const createLight = async() => {\r\n        if(name === \"匿名\")\r\n            message.error('請先登錄');\r\n        else if(hasLight)\r\n            message.error('您已經點過光明燈了');\r\n        else\r\n        {\r\n            console.log('create light : ', name);\r\n            turnLight();\r\n            await sendMessage('post', 'light', {params:{name}});\r\n            await getLightList();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //use api to get data\r\n        if(light_list.length === 0){\r\n            console.log(\"get light list\");\r\n            getLightList();\r\n        }\r\n    }, [light_list]);\r\n\r\n    return(\r\n        <div className=\"vertical content Light\">\r\n            {/* <div className=\"Header-space-box\"/> */}\r\n            <div className=\"light-panel\">\r\n                {light_list.map((light, i) => (\r\n                    <div key={i} className=\"light vertical\">\r\n                        <h1>{light.name}</h1>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"light-bar vertical\">\r\n                <Button size=\"large\" type=\"primary\" shape=\"round\" onClick={createLight}>我要點燈</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Light;","import { useState } from 'react';\r\nimport { message, Menu, Modal, Button, Form, Input } from 'antd';\r\nimport { HomeOutlined } from '@ant-design/icons';\r\nimport Mode_List from '../hooks/Mode_List';\r\nimport NameBox from './NameBox';\r\n\r\nconst Header = ({mode, changePage, name, signIn, signOut}) => {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const handleOk = ({ newName }) => {\r\n        setIsModalVisible(false);\r\n        signIn(newName);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    return(\r\n        <>\r\n            <div className=\"Header horizontal\">\r\n                {mode === \"Home\" ? \r\n                <></>\r\n                :\r\n                <Menu style={{height: 50}}mode=\"horizontal\" defaultSelectedKeys={mode} theme=\"dark\">\r\n                    {Mode_List.map((mode) => (\r\n                        <Menu.Item key={mode.modeName} onClick={() => {changePage(mode.modeName)}}>{mode.title}</Menu.Item>\r\n                    ))}\r\n                </Menu>\r\n                }\r\n                \r\n                <div className=\"push-right\"/>\r\n                {name!==\"匿名\" ? \r\n                    <div className=\"horizontal\">\r\n                        <div className=\"nameBox horizontal\">\r\n                            <NameBox name={name}/>\r\n                        </div>\r\n                        <Button shape=\"round\" onClick={signOut}>登出</Button>\r\n                    </div>\r\n                    :\r\n                    <Button shape=\"round\" onClick={() => setIsModalVisible(true)}>登入</Button>\r\n                }\r\n                <Button shape=\"circle\" icon={<HomeOutlined />} onClick={() => {changePage(\"Home\")}}/>\r\n            </div>\r\n            <Modal\r\n                visible={isModalVisible}\r\n                title=\"輸入您的名字\"\r\n                okText=\"確認\" cancelText=\"取消\"\r\n                onCancel={handleCancel}\r\n                onOk={() => {\r\n                    form.validateFields().then((values) => {\r\n                        form.resetFields();\r\n                        if(values.newName === \"匿名\")\r\n                            message.error(\"您不能取名叫匿名\");\r\n                        else\r\n                            handleOk(values);\r\n                        }).catch((e) => { window.alert(e); });\r\n                }}>\r\n                <Form form={form} layout=\"vertical\" \r\n                    name=\"form_in_modal\">\r\n                    <Form.Item\r\n                        name=\"newName\" label=\"姓名\"\r\n                        rules={[{\r\n                            required: true,\r\n                            message: \"您的姓名不能為空！\",\r\n                        },]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","const Footer = () => (\r\n    <>\r\n    </>\r\n);\r\n\r\nexport default Footer;","import './App.css';\r\nimport usePage from './hooks/usePage';\r\nimport useName from './hooks/useName';\r\nimport Home from './containers/Home';\r\nimport Incense from './containers/Incense';\r\nimport Straw from './containers/Straw';\r\nimport Divination from './containers/Divination';\r\nimport Light from './containers/Light';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  const { mode, changePage } = usePage();\r\n  const { name, signIn, signOut, hasLight, turnLight } = useName();\r\n\r\n  return(\r\n    <>\r\n      <Header mode={mode} changePage={changePage} name={name} signIn={signIn} signOut={signOut}/>\r\n      {(() => {\r\n        switch (mode) {\r\n          case 'Home':\r\n            return <Home changePage={changePage}/>;\r\n          case 'Incense':\r\n            return <Incense name={name}/>;\r\n          case 'Straw':\r\n            return <Straw name={name}/>;\r\n          case 'Divination':\r\n            return <Divination name={name}/>;\r\n          case 'Light':\r\n            return <Light name={name} hasLight={hasLight} turnLight={turnLight}/>;\r\n        }\r\n      })()}\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}